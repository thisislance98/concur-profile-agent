parameters:
  - name: action
    optional: true  # add, update, delete
  - name: phone_type
    optional: true  # home, work, cell
  - name: phone_number
    optional: true  # for add/update actions
  - name: chat_id
    optional: true

action_groups:
  # Initialize variables
  - actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "initializing"
          - name: phone_data
            value: null
          - name: phone_count
            value: 0
          - name: result_message
            value: ""
          - name: graphql_query
            value: "{ JouleCompleteUserProfile { phoneNumbers { value type primary } } }"
          - name: jwt_token
            value: "<? new i18n('JWT').toString() ?>"
          - name: selected_phone
            value: null
          - name: action_type
            value: "<? action != null ? action.toLowerCase() : null ?>"
          - name: phone_type_normalized
            value: "<? phone_type != null ? (phone_type.toLowerCase() == 'cell' or phone_type.toLowerCase() == 'mobile' ? 'Cell' : (phone_type.toLowerCase() == 'work' or phone_type.toLowerCase() == 'office' ? 'Work' : (phone_type.toLowerCase() == 'home' ? 'Home' : null))) : null ?>"
          - name: add_result
            value: null
          - name: update_result
            value: null
          - name: delete_result
            value: null
          - name: add_status
            value: 0
          - name: update_status
            value: 0
          - name: delete_status
            value: 0
          
  # First, retrieve current phone numbers
  - actions:
      - type: set-variables
        variables:
          - name: get_graphql_body
            value: |
              {
                "query": "<? graphql_query ?>"
              }

      - type: api-request
        method: POST
        system_alias: ConcurProfileBotAPI
        path: "/graphql"
        body: "<? get_graphql_body ?>"
        result_variable: get_result
        timeout: 30

  # Process phone retrieval response
  - condition: get_result != null && get_result.status_code == 200
    actions:
      - type: set-variables
        variables:
          - name: get_response_body
            value: "<? get_result.body ?>"
          - name: phone_data
            value: "<? get_response_body.data.JouleCompleteUserProfile.phoneNumbers ?>"
          - name: has_phones
            value: "<? phone_data != null && phone_data.size() > 0 ?>"
          - name: phone_count
            value: "<? has_phones ? phone_data.size() : 0 ?>"

  # Case 1: No action specified - show current phones and options
  - condition: action_type == null
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "show_options"

      - type: message
        scripting_type: handlebars
        message:
          type: text
          content: |
            üì± Your Phone Numbers
            
            {{#if has_phones}}
            {{#each phone_data}}
            ‚Ä¢ {{type}}: {{value}} {{#if primary}}(Primary){{/if}}
            {{/each}}
            {{else}}
            üìã No phone numbers on file.
            {{/if}}
            
            üîß What would you like to do?
            ‚Ä¢ ‚ûï Add a new phone number
            ‚Ä¢ üîÑ Update an existing phone number
            ‚Ä¢ üóëÔ∏è Delete a phone number
            
            üí° Examples:
            "Add my work phone 555-123-4567"
            "Update my cell phone to 555-987-6543"
            "Delete my home phone"

  # Case 2: ADD action - validate fields
  - condition: action_type == 'add'
    actions:
      - type: set-variables
        variables:
          - name: has_required_add_fields
            value: "<? phone_type_normalized != null && phone_number != null ?>"

  # Case 2a: ADD with missing fields - STOP HERE
  - condition: action_type == 'add' && (phone_type_normalized == null || phone_number == null)
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "add_missing_fields"
          - name: add_status
            value: 999  # Set to non-zero to prevent error handling

      - type: message
        scripting_type: handlebars
        message:
          type: text
          content: |
            ‚ùì Missing Information
            
            {{#if has_phones}}
            Your current phone numbers:
            {{#each phone_data}}
            ‚Ä¢ üì± {{type}}: {{value}}
            {{/each}}
            
            {{/if}}
            To add a phone number, please provide:
            ‚Ä¢ üì± Phone type (Home, Work, or Cell)
            ‚Ä¢ üî¢ Phone number
            
            üí° Example:
            "Add my work phone 555-123-4567"

  # Case 2b: ADD with all required fields
  - condition: action_type == 'add' && phone_type_normalized != null && phone_number != null
    actions:
      - type: set-variables
        scripting_type: handlebars
        variables:
          - name: new_phones_array
            value: |
              [
                {{#if has_phones}}
                {{#eachJoin phone_data}}
                {
                  "type": "{{#if (eq this.type 'cell')}}Cell{{else}}{{#if (eq this.type 'work')}}Work{{else}}{{#if (eq this.type 'home')}}Home{{else}}{{this.type}}{{/if}}{{/if}}{{/if}}",
                  "countryCode": "1",
                  "phoneNumber": "{{this.value}}",
                  "extension": "",
                  "contactOptIn": true,
                  "isPrimaryMobile": {{this.primary}}
                }
                {{/eachJoin}},
                {{/if}}
                {
                  "type": "{{phone_type_normalized}}",
                  "countryCode": "1",
                  "phoneNumber": "{{phone_number}}",
                  "extension": "",
                  "contactOptIn": true,
                  "isPrimaryMobile": false
                }
              ]

      - type: message
        message:
          type: text
          content: "‚ûï Adding <? phone_type_normalized ?> phone: <? phone_number ?>"

      - type: set-variables
        variables:
          - name: add_body
            value: |
              {
                "query": "mutation UpdateCompleteUserProfile($input: CompleteUserProfileInput!) { updateCompleteUserProfile(input: $input) { id phoneNumbers { value type primary } } }",
                "variables": {
                  "input": {
                    "telephones": <? new_phones_array ?>
                  }
                }
              }

      - type: api-request
        method: POST
        system_alias: ConcurProfileBotAPI
        path: "/graphql"
        body: "<? add_body ?>"
        result_variable: add_result
        timeout: 30

      - type: set-variables
        variables:
          - name: add_status
            value: "<? add_result != null ? add_result.status_code : 0 ?>"

  # Handle add result - success
  - condition: action_type == 'add' && add_status == 200
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "add_success"
      
      - type: message
        message:
          type: text
          content: "‚úÖ Phone Number Added Successfully\n\nüì± Added: <? phone_type_normalized ?> - <? phone_number ?>\n\n‚ö†Ô∏è Note: Changes may take a few seconds to appear due to API processing."

  # Handle add result - failure (only for actual API attempts)
  - condition: action_type == 'add' && phone_type_normalized != null && phone_number != null && add_status != 200 && add_status != 0
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "add_failed"
          - name: error_msg
            value: "<? 'HTTP ' + add_status ?>"
      
      - type: message
        message:
          type: text
          content: "‚ùå Failed to Add Phone Number\n\nüö® Error: <? error_msg ?>"

  # Handle add result - connection failure (only for actual API attempts)
  - condition: action_type == 'add' && phone_type_normalized != null && phone_number != null && add_status == 0
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "add_failed"
      
      - type: message
        message:
          type: text
          content: "‚ùå Failed to Add Phone Number\n\nüö® Error: Connection failed"

  # Case 3: UPDATE action - no phones exist
  - condition: action_type == 'update' && phone_count == 0
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "update_no_phones"
      
      - type: message
        message:
          type: text
          content: "üìã No Phone Numbers Found\n\nYou don't have any phone numbers to update. Please add a phone number first."

  # Case 3a: UPDATE with missing fields - STOP HERE
  - condition: action_type == 'update' && phone_count > 0 && (phone_type_normalized == null || phone_number == null)
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "update_missing_fields"
          - name: update_status
            value: 999  # Set to non-zero to prevent error handling

      - type: message
        scripting_type: handlebars
        message:
          type: text
          content: |
            ‚ùì What would you like to update?
            
            Your current phone numbers:
            {{#each phone_data}}
            ‚Ä¢ üì± {{type}}: {{value}}
            {{/each}}
            
            Please specify:
            ‚Ä¢ üì± Phone type to update (home, work, or cell)
            ‚Ä¢ üî¢ New phone number
            
            üí° Example:
            "Update my cell phone to 555-987-6543"

  # Case 3b: UPDATE with all fields
  - condition: action_type == 'update' && phone_count > 0 && phone_type_normalized != null && phone_number != null
    actions:
      - type: set-variables
        scripting_type: handlebars
        variables:
          - name: updated_phones_array
            value: |
              [
                {{#eachJoin phone_data}}
                {{#if ../phone_count}}{{#if (eq ../phone_count 1)}}
                {
                  "type": "{{#if (eq this.type 'cell')}}Cell{{else}}{{#if (eq this.type 'work')}}Work{{else}}{{#if (eq this.type 'home')}}Home{{else}}{{this.type}}{{/if}}{{/if}}{{/if}}",
                  "countryCode": "1",
                  "phoneNumber": "{{../phone_number}}",
                  "extension": "",
                  "contactOptIn": true,
                  "isPrimaryMobile": {{this.primary}}
                }
                {{else}}{{#if (or (and (eq this.type 'cell') (eq ../phone_type_normalized 'Cell')) (and (eq this.type 'work') (eq ../phone_type_normalized 'Work')) (and (eq this.type 'home') (eq ../phone_type_normalized 'Home')))}}
                {
                  "type": "{{#if (eq this.type 'cell')}}Cell{{else}}{{#if (eq this.type 'work')}}Work{{else}}{{#if (eq this.type 'home')}}Home{{else}}{{this.type}}{{/if}}{{/if}}{{/if}}",
                  "countryCode": "1",
                  "phoneNumber": "{{../phone_number}}",
                  "extension": "",
                  "contactOptIn": true,
                  "isPrimaryMobile": {{this.primary}}
                }
                {{else}}
                {
                  "type": "{{#if (eq this.type 'cell')}}Cell{{else}}{{#if (eq this.type 'work')}}Work{{else}}{{#if (eq this.type 'home')}}Home{{else}}{{this.type}}{{/if}}{{/if}}{{/if}}",
                  "countryCode": "1",
                  "phoneNumber": "{{this.value}}",
                  "extension": "",
                  "contactOptIn": true,
                  "isPrimaryMobile": {{this.primary}}
                }
                {{/if}}{{/if}}{{/if}}
                {{/eachJoin}}
              ]

      - type: message
        message:
          type: text
          content: "üîÑ Updating <? phone_type_normalized ?> phone to: <? phone_number ?>"

      - type: set-variables
        variables:
          - name: update_body
            value: |
              {
                "query": "mutation UpdateCompleteUserProfile($input: CompleteUserProfileInput!) { updateCompleteUserProfile(input: $input) { id phoneNumbers { value type primary } } }",
                "variables": {
                  "input": {
                    "telephones": <? updated_phones_array ?>
                  }
                }
              }

      - type: api-request
        method: POST
        system_alias: ConcurProfileBotAPI
        path: "/graphql"
        body: "<? update_body ?>"
        result_variable: update_result
        timeout: 30

      - type: set-variables
        variables:
          - name: update_status
            value: "<? update_result != null ? update_result.status_code : 0 ?>"

  # Handle update result - success
  - condition: action_type == 'update' && update_status == 200
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "update_success"
      
      - type: message
        message:
          type: text
          content: "‚úÖ Phone Number Updated Successfully\n\nüì± Updated: <? phone_type_normalized ?> - <? phone_number ?>\n\n‚ö†Ô∏è Note: Changes may take a few seconds to appear."

  # Handle update result - failure (only for actual API attempts)
  - condition: action_type == 'update' && phone_type_normalized != null && phone_number != null && update_status != 200 && update_status != 0
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "update_failed"
      
      - type: message
        message:
          type: text
          content: "‚ùå Failed to Update Phone Number"

  # Handle update result - connection failure (only for actual API attempts)
  - condition: action_type == 'update' && phone_type_normalized != null && phone_number != null && update_status == 0
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "update_failed"
      
      - type: message
        message:
          type: text
          content: "‚ùå Failed to Update Phone Number\n\nüö® Error: Connection failed"

  # Case 4: DELETE action - no phones exist
  - condition: action_type == 'delete' && phone_count == 0
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "delete_no_phones"
      
      - type: message
        message:
          type: text
          content: "üìã No Phone Numbers Found\n\nYou don't have any phone numbers to delete."

  # Case 4a: DELETE - need selection - STOP HERE
  - condition: action_type == 'delete' && phone_count > 0 && phone_type_normalized == null
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "delete_need_selection"
          - name: delete_status
            value: 999  # Set to non-zero to prevent error handling

      - type: message
        scripting_type: handlebars
        message: >
          {
            "type": "list",
            "content": {
              "title": "Select Phone to Delete",
              "subtitle": "Choose which phone number to remove",
              "enableDetailView": false,
              "total": "{{phone_count}}",
              "initialPageSize": 5,
              "elements": [
                {{#eachJoin phone_data}}
                {
                  "title": "{{type}}: {{value}}",
                  "subtitle": "{{#if primary}}Primary Phone{{else}}Additional Phone{{/if}}",
                  "buttons": [
                    {
                      "type": "postback",
                      "title": "Delete",
                      "text": "Delete my {{type}} phone",
                      "value": "Delete my {{type}} phone"
                    }
                  ]
                }
                {{/eachJoin}}
              ]
            }
          }

  # Case 4b: DELETE with phone type specified
  - condition: action_type == 'delete' && phone_count > 0 && phone_type_normalized != null
    actions:
      - type: set-variables
        scripting_type: handlebars
        variables:
          - name: remaining_phones_array
            value: |
              [
                {{#eachJoin phone_data}}
                {{#unless (or (and (eq this.type 'cell') (eq ../phone_type_normalized 'Cell')) (and (eq this.type 'work') (eq ../phone_type_normalized 'Work')) (and (eq this.type 'home') (eq ../phone_type_normalized 'Home')))}}
                {
                  "type": "{{#if (eq this.type 'cell')}}Cell{{else}}{{#if (eq this.type 'work')}}Work{{else}}{{#if (eq this.type 'home')}}Home{{else}}{{this.type}}{{/if}}{{/if}}{{/if}}",
                  "countryCode": "1",
                  "phoneNumber": "{{this.value}}",
                  "extension": "",
                  "contactOptIn": true,
                  "isPrimaryMobile": {{this.primary}}
                }
                {{/unless}}
                {{/eachJoin}}
              ]

      - type: message
        message:
          type: text
          content: "üóëÔ∏è Deleting <? phone_type_normalized ?> phone number"

      - type: set-variables
        variables:
          - name: delete_body
            value: |
              {
                "query": "mutation UpdateCompleteUserProfile($input: CompleteUserProfileInput!) { updateCompleteUserProfile(input: $input) { id phoneNumbers { value type primary } } }",
                "variables": {
                  "input": {
                    "telephones": <? remaining_phones_array ?>
                  }
                }
              }

      - type: api-request
        method: POST
        system_alias: ConcurProfileBotAPI
        path: "/graphql"
        body: "<? delete_body ?>"
        result_variable: delete_result
        timeout: 30

      - type: set-variables
        variables:
          - name: delete_status
            value: "<? delete_result != null ? delete_result.status_code : 0 ?>"

  # Handle delete result - success
  - condition: action_type == 'delete' && delete_status == 200
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "delete_success"
      
      - type: message
        message:
          type: text
          content: "‚úÖ Phone Number Deleted Successfully\n\nüóëÔ∏è Removed: <? phone_type_normalized ?> phone\n\n‚ö†Ô∏è Note: Changes may take a few seconds to appear."

  # Handle delete result - failure (only for actual API attempts)
  - condition: action_type == 'delete' && phone_type_normalized != null && delete_status != 200 && delete_status != 0
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "delete_failed"
      
      - type: message
        message:
          type: text
          content: "‚ùå Failed to Delete Phone Number"

  # Handle delete result - connection failure (only for actual API attempts)
  - condition: action_type == 'delete' && phone_type_normalized != null && delete_status == 0
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "delete_failed"
      
      - type: message
        message:
          type: text
          content: "‚ùå Failed to Delete Phone Number\n\nüö® Error: Connection failed"

  # Handle API errors - only if no other operation was attempted
  - condition: get_result != null && get_result.status_code != 200 && operation_status == "initializing"
    actions:
      - type: set-variables
        variables:
          - name: operation_status
            value: "retrieval_error"
          - name: result_message
            value: "<? 'API Error: ' + get_result.status_code ?>"

      - type: message
        message:
          type: text
          content: "‚ùå Failed to Retrieve Phone Information\n\nüö® Error: <? result_message ?>"

